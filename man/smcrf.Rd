% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smcrf.r
\name{smcrf}
\alias{smcrf}
\title{Approximate Bayesian Computation sequential Monte Carlo via random forests}
\usage{
smcrf(
  method = "smcrf-single-param",
  statistics_target = NULL,
  smcrf_results = NULL,
  model,
  perturb,
  range = NULL,
  parameters_initial = NULL,
  nParticles,
  parallel = FALSE,
  n_cores = NULL,
  ...
)
}
\arguments{
\item{method}{Random forest method to implement in each iteration ("smcrf-single-param" by default).
method = "smcrf-single-param": implements ABC-RF for each parameter and results in their marginal posterior distributions.
method = "smcrf-multi-param": implements ABC-DRF for all parameters and results in the joint posterior distribution.}

\item{statistics_target}{A dataframe containing statistics from data.
Column names are the statistics IDs.
`smcrf()` only supports one row of statistics.
If there are multiple observations, we recommend applying `smcrf()` to each row individually.}

\item{smcrf_results}{An existing ABC-SMC-RF result.
If provided, smcrf will continue ABC-SMC-RF from the last iteration of the previous run.}

\item{model}{Model for the statistics.
The function must take two inputs: a data frame parameters and logic variable parallel.}

\item{perturb}{...}

\item{range}{...}

\item{parameters_initial}{...}

\item{nParticles}{...}

\item{parallel}{...}

\item{n_cores}{...}

\item{...}{Additional arguments to be passed to `abcrf` or `drf`.}
}
\value{
An object `smcrf_results` containing the results of the inference.
If the posterior distributions have not converged to a satisfactory level,
the user may continue with `smcrf(smcrf_results = smcrf_results, ...)`,
in which case ABC-SMC-(D)RF will continue iterating from the last run in `smcrf_results`.
}
\description{
`smcrf()` uses random forests to find the posterior distribution(s) for one or more parameters in a model.
It implements the sequential Monte Carlo framework, where each iteration
uses either ABC-RF (functions `regAbcrf` and `predict` in R package `abcrf`)
or ABC-DRF (functions `drf` and `predict` in R package `drf`) to update the posterior distribution(s).
}
\examples{
library(abcsmcrf)
#---------------------------ABC-SMC-RF for a model with one parameter
#    Data statistics to be fitted:
statistics_target <- data.frame(s1 = 0, s2 = 2)
#    Parametrized model for the statistics:
model <- function(parameters) {
    statistics <- data.frame(
        s1 = parameters$theta - 1 + runif(nrow(parameters)),
        s2 = parameters$theta + 1 + runif(nrow(parameters))
    )
    cbind(parameters, statistics)
}
#    Perturbation function for the parameters:
perturb <- function(parameters) {
    parameters$theta <- parameters$theta + runif(nrow(parameters), min = -0.1, max = 0.1)
    return(parameters)
}
#    Initial guesses for the parameters:
parameters_initial <- data.frame(theta = runif(100000, -10, 10))
#    Ranges for the parameters:
range <- data.frame(
    parameter = c("theta"),
    min = c(-10),
    max = c(10)
)
#    Run ABC-SMC-RF for one parameter:
smcrf_results <- smcrf(
    method = "smcrf-single-param",
    statistics_target = statistics_target,
    model = model,
    perturb = perturb,
    range = range,
    parameters_initial = parameters_initial,
    nParticles = c(100, 100, 100),
)
}
